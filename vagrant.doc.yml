#------------------------------------------------------------
# vagrant.doc.yml
#
# This is an example vagrant.yml YAML file that
# documents and defines the various fields and options
# of this configuration file for the Vagrant provisioner
# to use to create a (or multiple) virtual machines.
#------------------------------------------------------------

# name of the project (root name of machines)
project:

# list of (multiple) machines and the configurations
# for each of the machines.
machines:
  - name:               # machine name
    box:                # shorthand name of the base box machine

    # optional properties
    box_url:            # url of the base box machine
    box_version:        # version number of the base box or 'latest' for
                        # check upate to be set to true

    # key-value pairs of providers that configures the machine for
    # each of the various provider (hypervisor) implementations.
    # (i.e.: virtualbox, vmware_fusion, vmware_workstation, parallels, etc.)
    providers:

      # configurations for hypervisor: virtualbox
      virtualbox:
        name:           # auto set as machine name, unless overridden
        gui:            # boolean whether UI of the host machine will be
                        # visible on the host machine. (default: false)
        linked_clone:   # boolean whether linked clones are based on a master VM,
                        # which is generated by importing the base box only once
                        # the first time it is required
        cpus:           # number of cpus
        memory:         # amount of memory in megabytes
        customize:      # key-value pairs of arguments for customizations to
                        # modify the virtualbox VM (i.e.: groups, ostype)
        vbmanage:       # list of customizations to modify the virtualbox VM;
                        # each customization is an array of arguments

      # configurations for hypervisor: vmware
      vmware_fusion:
      vmware_workstation:
        name:           # auto set as machine name, unless overridden
        cpus:           # number of cpus
        memory:         # amount of memory in megabytes
        ostype:         # guest operating system type

      # configurations for hypervisor: parallels
      parallels:
        cpus:           # number of cpus
        memory:         # amount of memory in megabytes

    # Configures how Vagrant will access your machine over SSH
    ssh:
      username:         # username that Vagrant will SSH in as (default: vagrant)
      password:         # passwrod that Vagrant will SSH in as (default: vagrant)
      shell:            # shell to use when executing SSH commands from Vagrant
      private_key_path: # path to the private key to use to SSH into guest machine
                        # (default: insecure private key that ships with Vagrant)
      insert_key:       # boolean whether Vagrant will automatically insert a key-
                        # pair to use for SSH, replacing Vagrant's default insecure
                        # key inside the machine if detected (default: true). For
                        # re-packaging VM for distribute set as false.

    # list of metwork configurations
    networks:
      - kind:           # type of network: forwarded_port,
                        # private_network or public_network

        # if kind is: forwarded_port
        guest:          # port number of the guest machine
        guest_ip:       # ip address that the guest machine bounds to
        host:           # port number of the host machine
        host_ip:        # ip address that the host machine bounds to

        # if kind is: private_network
        ip:             # ip address of the guest machine on the private network
                        # for static ip or 'dynamic' for the type of the network
                        # to be set as 'dhcp'
        auto_config:    # boolean whether to auto configure the network or
                        # or not (manually configure).

        # if kind is: public_network
        ip:             # ip address of the guest machine on the private network
                        # for static ip or 'dynamic' for the type of the network
                        # to be set as 'dhcp'
        auto_config:    # boolean whether to auto configure the network or
                        # or not (manually configure).

    # List of synced folders
    # Synced folders enable Vagrant to sync a folder on the host machine to
    # the guest machine, allowing you to continue working on your project's
    # files on your host machine, but use the resources in the guest machine
    # to compile or run your project.
    synced_folders:
      - host:           # the path on the host machine relative to the project
        guest:          # the path on the guest machine relative to the project

        # optional properties
        create:         # boolean for whether to create the directory on the
                        # guest if it does not exist previously
        group:          # group assignment of the directory on the guest
        owner:          # owner assignment of the directory on the guest
        mount_options:  # mounting options for the mount command when
                        # attaching the synced folder to the guest machine

    # list of provisioning rules
    provisions:
      - kind:           # type of provision: (file, shell, etc.)

        # optional properties
        name:           # name of the provision rule
        run:            # when to run the provision: once or always

        # if kind is: file
        source:         # the local path of the file or directory to be uploaded
        destination:    # the remote path on the guest machine where the
                        # source will be uploaded to
        target:         # similar to destination, except instead of full destination
                        # path, only is the location or directory that the file
                        # will be copies to.

        # if kind is: shell
        inline:         # shell command inline to execute on the remote machine
        path:           # path to a shell script to upload and execute; can be
                        # a script relative to the project or a remote script
        privileged:     # boolean whether to execute the shell script as a
                        # privileged user (sudo) or not (default: true)
        args:           # list of arguments to pass to the scripts; string with
                        # shell escapement or as array
        env:            # key-value pairs of environment variables to be set
                        # when executing the shell script
        upload_path:    # remote path where the shell script will be uploaded to.
        binary:         # boolean whether Vagrant automatically replaces Windows
                        # line endings with Unix line endings or not.
